// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;

#nullable disable

namespace SqlOperationsEntityFrameworkCore.Models
{

    /// <summary>
    /// Class which represents products in NorthWind database.
    /// </summary>
    /// <remarks>
    /// Code was generated by EF Power Tools, Karen added INotifyPropertyChanged
    /// </remarks>
    public partial class Products : INotifyPropertyChanged
    {
        private string _productName;
        private string _quantityPerUnit;
        private decimal? _unitPrice;
        private short? _unitsInStock;
        private short? _unitsOnOrder;
        
        public int ProductId { get; set; }

        public string ProductName
        {
            get => _productName;
            set
            {
                _productName = value;
                OnPropertyChanged();
            }
        }

        public int? SupplierId { get; set; }
        public int? CategoryId { get; set; }

        public string QuantityPerUnit
        {
            get => _quantityPerUnit;
            set
            {
                _quantityPerUnit = value;
                OnPropertyChanged();
            }
        }

        public decimal? UnitPrice
        {
            get => _unitPrice;
            set
            {
                _unitPrice = value;
                OnPropertyChanged();
            }
        }

        public short? UnitsInStock
        {
            get => _unitsInStock;
            set
            {
                _unitsInStock = value;
                OnPropertyChanged();   
            }
        }

        public short? UnitsOnOrder
        {
            get => _unitsOnOrder;
            set
            {
                _unitsOnOrder = value;
                OnPropertyChanged();
            }
        }

        public short? ReorderLevel { get; set; }
        public bool Discontinued { get; set; }
        public DateTime? DiscontinuedDate { get; set; }

        public virtual Categories Category { get; set; }
        public virtual Suppliers Supplier { get; set; }
        
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}